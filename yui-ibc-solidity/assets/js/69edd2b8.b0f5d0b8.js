"use strict";(self.webpackChunkyui_docs_yui_ibc_solidity=self.webpackChunkyui_docs_yui_ibc_solidity||[]).push([[567],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),f=i,m=s["".concat(c,".").concat(f)]||s[f]||d[f]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6661:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p}});var r=n(3117),i=(n(7294),n(3905));const o={sidebar_position:4},a="Deploy contracts",l={unversionedId:"minitoken/deploy",id:"minitoken/deploy",title:"Deploy contracts",description:"The next step is to deploy contracts.",source:"@site/docs/minitoken/deploy.md",sourceDirName:"minitoken",slug:"/minitoken/deploy",permalink:"/yui-docs/yui-ibc-solidity/minitoken/deploy",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create a contract",permalink:"/yui-docs/yui-ibc-solidity/minitoken/contract"},next:{title:"Execute token transfer",permalink:"/yui-docs/yui-ibc-solidity/minitoken/interaction"}},c={},p=[{value:"Registering MiniToken with IBCHandler",id:"registering-minitoken-with-ibchandler",level:2},{value:"Setup environment and deploy",id:"setup-environment-and-deploy",level:2}],u={toc:p},s="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(s,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"deploy-contracts"},"Deploy contracts"),(0,i.kt)("p",null,"The next step is to deploy contracts."),(0,i.kt)("h2",{id:"registering-minitoken-with-ibchandler"},"Registering MiniToken with IBCHandler"),(0,i.kt)("p",null,"In this tutorial, we use Truffle for deploying contracts.\nAs usual, deployment of contracts and other migration management is done in the files under ",(0,i.kt)("inlineCode",{parentName:"p"},"migrations")," directory.\nFor more information about Truffle's migration, please refer to ",(0,i.kt)("a",{parentName:"p",href:"https://www.trufflesuite.com/docs/truffle/getting-started/running-migrations"},"here"),"."),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"IBCHandler.bindPort")," to call the appropriate contract according to the receiving port specified in the Packet when IBCHandler receives it."),(0,i.kt)("p",null,"As shown in ",(0,i.kt)("inlineCode",{parentName:"p"},"migrations/2_token_migration.js"),", after deploying each contract, MiniToken is tied to the ",(0,i.kt)("inlineCode",{parentName:"p"},"transfer")," port."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const PortTransfer = "transfer";\nibcHandler.bindPort(PortTransfer, MiniToken.address);\n')),(0,i.kt)("h2",{id:"setup-environment-and-deploy"},"Setup environment and deploy"),(0,i.kt)("p",null,"You can build the required environment by simply running the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"make setup\n")),(0,i.kt)("p",null,"Specifically, the above command will do the following"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Build the ledger and Relayer"),(0,i.kt)("li",{parentName:"ul"},"Start the two ledger networks"),(0,i.kt)("li",{parentName:"ul"},"Deploy a Contract to the ledgers"),(0,i.kt)("li",{parentName:"ul"},"Start Relayer and execute Handshake between the two ledgers")),(0,i.kt)("p",null,"To exit the environment, execute the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"make down\n")))}d.isMDXComponent=!0}}]);